<table id="documentation">
  <tr>
    <td class="description"></td>
    <td class="example"><button class="btn">Ruby</button></td>
  </tr>

  <tr>
    <td class="description">
      <h1>Setup</h1>
      <p>
        After creating a developer account and registering your service, an API token tied to you service is required
        with each request.
      </p>
    </td>
    <td class="example">
  Pass.api_token = &lt;API_TOKEN&gt;
    </td>
  </tr>

  <tr>
    <td class="description">
      <h1>Authentication</h1>
      <p>
        Pass can be integrated into any site by creating a developer account, and inserting the following Javascript snippit
        into the login page of you website.
      </p>
      <p>
        <code>_pass.redirect_to</code> can be customized to set which page to send the user to after they have authenticated.
        If this value is not set, or is blank, the page will simply be refreshed.
      </p>
      <p>
        <code>_pass.target</code> specifies where to insert the QR code onto the page. It should be set to either a string which
        is the <code>id</code> of the node, or an object represenation of the node. This can be done by locating node yourself, via <code>getElementById("login-form")</code>, or similar functions, or via a library such as jQuery:
        <code>$("#login-form")[0]</code>.
      </p>
    </td>
    <td class="example">
  &lt;script&gt;
    window._pass = window._pass || {};
    _pass.session_id = &lt;session_id&gt;;
    _pass.target = "login-form";
    _pass.redirect_to = '/home';

    (function() {
      var t = document.createElement('script');
      t.type = 'text/javascript';
      t.async = true;
      t.src = 'https://passauth.net/pass.js';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(t, s);
    })();
  &lt;/script&gt;
    </td>
  </tr>
  <tr>
    <td class="description">
      <h1>Creating a Session</h1>
      <p>
        Each request requires a unique session generated by the API.
      </p>
    </td>
    <td class="example">
  Pass.api_token = &lt;API_TOKEN&gt;
  Pass::Session.create
  =&gt; {
    "id": 26,
    "created_at": "2013-05-11T22:36:40.885Z"
  }
    </td>
  </tr>
  
  <tr>
    <td class="description">
      <h1>Retriving a Session</h1>
      <p>
        To check the status of a session you have created, you can retrieve it from the API. This should be used by all
        authentication callbacks to check the outcome of the session.
      </p>
      <p>
        If the session has not be authenticated against yet,
        a call to <code>retrieve</code> will return an object with <code>is_authenticated</code> set to <code>null</code> and
        no <code>user</code> property.
      </p>
    </td>
    <td class="example">
  Pass.api_token = &lt;API_TOKEN&gt;
  Pass::Session.retrieve 26
  =&gt; {
    "id": 26,
    "is_authenticated": true,
    "user": {
      "id": 2,
      "email": "pass@example.com"
    }
  }
    </td>
  </tr>

  <tr>
    <td class="description">
      <h1>Retriving a Session</h1>
      <p>
        To check the status of a session you have created, you can retrieve it from the API. This should be used by all
        authentication callbacks to check the outcome of the session.
      </p>
      <p>
        If the session has not be authenticated against yet,
        a call to <code>retrieve</code> will return an object with <code>is_authenticated</code> set to <code>null</code> and
        no <code>user</code> property.
      </p>
    </td>
    <td class="example">
  Pass.api_token = &lt;API_TOKEN&gt;
  Pass::Session.retrieve 26
  =&gt; {
    "id": 26,
    "is_authenticated": true,
    "user": {
      "id": 2,
      "email": "pass@example.com"
    }
  }
    </td>
  </tr>


  <tr>
    <td class="description">
      <h1>Error Handling</h1>
      <p>
        Any exceptions produced by the library can be caught using the <code>Pass::PassError</code> type.
      </p>
    </td>
    <td class="example">
  begin
    pass_session = Pass::Session.create
  rescue Pass::PassError => e
    logger.error e.to_s
    # Do something important
  end
    </td>
  </tr>
</table>
